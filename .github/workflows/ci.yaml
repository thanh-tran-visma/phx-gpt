name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Make
        run: sudo apt-get install -y make

      - name: Install dependencies
        run: pip install -r requirements.txt

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install linting dependencies
        run: pip install flake8 black

      - name: Run Flake8
        run: |
          echo "Running Flake8..."
          flake8 .

      - name: Run Black (check mode)
        run: |
          echo "Running Black..."
          black --check .


  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -u test_user -ptest_password --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Set environment variables
        run: |
          echo "MODEL_NAME=${{ secrets.MODEL_NAME }}" >> $GITHUB_ENV
          echo "HF_TOKEN=${{ secrets.HF_TOKEN }}" >> $GITHUB_ENV
          echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}" >> $GITHUB_ENV
          echo "GGUF_MODEL=${{ secrets.GGUF_MODEL }}" >> $GITHUB_ENV
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "DB_DATABASE=test_db" >> $GITHUB_ENV
          echo "DB_USERNAME=test_user" >> $GITHUB_ENV
          echo "DB_PASSWORD=test_password" >> $GITHUB_ENV

      - name: Run unit tests
        run: python -m pytest tests/
